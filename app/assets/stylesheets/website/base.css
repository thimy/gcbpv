html {
  background-color: var(--background-color);
  background-filter: opacity(0.1);
  background-image: url("icons/sprinkles.svg"),
                    url("icons/sparkles.svg"),
                    url("icons/crosses.svg");
  background-position: 62% 6%, right 1% top 2%, right 100% top 5%;
  background-repeat: no-repeat, no-repeat, no-repeat;
  background-size: 20%, 20%, 10%;
}

body {
  background-size: cover;
  container-type: inline-size;
  display: flex;
  flex-direction: column;
  position: relative;
}

dl {
  &:first-child {
    margin-block-start: 0;
  }

  &.horizontal {
    display: flex;
    gap: var(--size-2);

    dt, dd {
      display: flex;
      align-items: center;
    }

    dd + dt {
      margin-inline-start: var(--size-4);
    }
  }
}

dt {
  font-family: var(--font-serif);
  font-size: var(--font-size-2);

  &:is(dt:not(.horizontal) > dd + *) {
    margin-top: var(--size-3);
  }
}

dd {
  margin: 0;

  /* ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(auto, 230px));
  } */
}

address {
  font-style: normal;
}

.main-wrapper {
  display: flex;
}

main {
  row-gap: var(--size-8);
  padding-block-end: var(--size-8);
}

:where(.panel) {
  background: var(--white);
  border-radius: var(--radius-3);
  box-shadow: var(--light-elevation-low);
  display: grid;
  gap: var(--size-6);
  overflow: hidden;
  padding: var(--size-6) var(--size-8);

  h2 {
    margin-bottom: var(--size-4);
  }

  p {
    margin: 0;
  }
}

:where(.grid) {
  container-type: inline-size;
  display: grid;
  gap: var(--size-6);
  grid-template-columns: 1fr 1fr;

  &:where([data-grid="1-3"]) {
    grid-template-columns: 1fr 3fr;
  }

  &:where([data-grid="2-3"]) {
    grid-template-columns: 2fr 3fr;
  }

  &:where([data-grid="3-1"]) {
    grid-template-columns: 3fr 1fr;
  }

  &:where([data-grid="3-2"]) {
    grid-template-columns: 3fr 2fr;
  }

  &:where([data-grid="repeat"]) {
    --column-width: 300px;
    grid-template-columns: repeat(auto-fit, minmax(var(--column-width), 1fr));
  }

  > :where(*:not(.grid)) {
    display: flex;
    flex-direction: column;
    gap: var(--size-2);
  }

  h2 {
    grid-column: 1 / -1;
  }
}

p {
  &.with-image {
    align-items: center;
    display: grid;
    gap: var(--gap);
    grid-template-columns: 2fr 1fr;
  }
  
  &.with-image--left {
    grid-template-columns: 1fr 2fr;
  }
  
  &.with-image img {
    width: 100%;
  }
}


@container (width < 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}
